---
title: "Take-Home_Ex03"
auther: "Hei Yee Kai"
date: "October 30, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  freeze: true
format:
  html:
    toc: true
---

# **Introduction**

## **Importing Packages**

```{r}
pacman::p_load(sf, st, tidyverse, raster, tmap, tmaptools, ggplot2, spatstat, sfdep)
```

## **Importing Dataset into R environment**

```{r}
crime_district <- read_csv("data/crime_district.csv")
```

```{r}
malaysia_sf <- read_sf(dsn = "data/my_shp", 
                 layer = "mys_admbnda_adm2_unhcr_20210211") %>%
  st_as_sf(coords =c(
    "longitude", "latitude"),
           crs = 4326) %>%
  st_transform(crs = 3168)
```

```{r}
malaysia_sf <- malaysia_sf %>%
filter(ADM1_EN != 'W.P. Labuan' & ADM1_EN != 'Sabah' & ADM1_EN != 'Sarawak') %>%
          mutate(ADM1_EN = replace(ADM1_EN, ADM1_EN == 'W.P. Kuala Lumpur', 'Kuala Lumpur'),
                 ADM1_EN = replace(ADM1_EN, ADM1_EN == 'W.P. Putrajaya', 'Selangor'), 
                 ADM1_EN = toupper(ADM1_EN),
                 ADM2_EN = toupper(ADM2_EN))
```

```{r}
malaysia_sf
```

# **Geospatial Data Wrangling**

```{r}
crime_district <- crime_district %>%
              filter(state != 'Malaysia' & state != 'Sabah' & state != 'Sarawak') %>%
              mutate(state = replace(state, state == 'W.P. Kuala Lumpur', 'Kuala Lumpur'),
                     state = toupper(state),
                     district = toupper(district)) %>%
                  filter(district != 'ALL')  %>%
                  filter(type != 'all') 
crime_district
```

```{r}
crime_district_malaysia <- malaysia_sf %>%
  left_join(crime_district,
            by = c("ADM1_EN" = "state",
                   "ADM2_EN" = "district")) %>%
  dplyr::select(1, 6, 13:19)

crime_district_malaysia
```

```{r}
crime_district_malaysia_sf <- st_as_sf(crime_district_malaysia)
st_crs(crime_district_malaysia_sf) <- st_crs(malaysia_sf)
```

# **EDA**

## **Choropleth**

### **Choropleth Map for Crime Rate by State**

```{r}
tmap_mode("plot")
```

```{r}
tm_shape(crime_district_malaysia_sf) +
  tm_fill("crimes", 
          style = "quantile", 
          palette = "Blues",
          title = "Crime Ratio") +
  tm_layout(main.title = "Distribution of Crime Ratio by planning subzone",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_grid(alpha =0.2)
```

### **Choropleth Map for Crime Rate by Category**

```{r}
table(crime_district_malaysia_sf$category)
```

```{r}
assault_data <- subset(crime_district_malaysia_sf, category == "assault")

tm_shape(assault_data) +
  tm_fill("crimes", 
          style = "quantile", 
          palette = "Blues",
          title = "Crime Ratio") +
  tm_layout(main.title = "Distribution of Assault Crime Ratio by planning subzone",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_grid(alpha =0.2)

```

```{r}
property_data <- subset(crime_district_malaysia_sf, category == "property")

tm_shape(property_data) +
  tm_fill("crimes", 
          style = "quantile", 
          palette = "Blues",
          title = "Crime Ratio") +
  tm_layout(main.title = "Distribution of Property Crime Ratio by planning subzone",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_grid(alpha =0.2)
```

### **Choropleth Map for Crime Rate by Type**

```{r}
table(crime_district_malaysia_sf$type)
```

```{r}
create_crime_map <- function(data, crime_type) {
  crime_specific <- subset(data, type == crime_type)
  
  title <- paste("Distribution of", 
                gsub("_", " ", crime_type), 
                "in Malaysia")
  
  tm_shape(crime_specific) +
    tm_fill("crimes",
            palette = "Blues",
            style = "quantile",
            n = 5,
            title = "Number of Cases") +
    tm_borders(lwd = 0.1, alpha = 1) +
    tm_layout(
      main.title = title,
      main.title.position = "center",
      main.title.size = 1.2,
      legend.height = 0.45, 
      legend.width = 0.35,
      frame = TRUE) +
    tm_grid(alpha =0.2)
}

plot_list <- list()
crime_types <- c("break_in", "causing_injury", "murder", "rape", 
                 "robbery_gang_armed", "robbery_gang_unarmed", 
                 "robbery_solo_armed", "robbery_solo_unarmed", 
                 "theft_other", "theft_vehicle_lorry", 
                 "theft_vehicle_motorcar", "theft_vehicle_motorcycle")

for (type in crime_types) {
  # Filter data for specific crime type

  p <- create_crime_map(crime_district_malaysia_sf, type)
  plot_list[[type]] <- p
}

tmap_arrange(plotlist = plot_list, ncol = 3, nrow = 4)
```

## **Histogram**

### **Preparing Data for Histograms**

```{r}
crime_data_clean <- na.omit(crime_district_malaysia_sf)
```

### **Histogram for Crime Rate by Category**

```{r}
ggplot(crime_data_clean, aes(x = crimes, fill = category)) +
  geom_histogram(color = "black", 
                 bins = 30, 
                 position = "identity", 
                 alpha = 0.7) +
  labs(title = "Distribution of Crimes by Category",
       x = "Number of Cases",
       y = "Frequency",
       fill = "Category") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "bottom") +
  scale_fill_manual(values = c("assault" = "#FF9999", "property" = "#66B2FF"))

ggplot(crime_data_clean, aes(x = crimes, fill = category)) +
  geom_density(alpha = 0.7) +
  labs(title = "Density Distribution of Crimes by Category",
       x = "Number of Cases",
       y = "Density",
       fill = "Category") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "bottom") +
  scale_fill_manual(values = c("assault" = "#FF9999", "property" = "#66B2FF"))
```

```{r}
ggplot(crime_data_clean, aes(x = category, y = crimes, fill = category)) +
  geom_boxplot() +
  labs(title = "Distribution of Crime Cases by Category",
       x = "Category",
       y = "Number of Cases") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none") +
  scale_fill_manual(values = c("assault" = "#FF9999", "property" = "#66B2FF"))
```

### **Histogram for Crime Rate by Type**

```{r}
ggplot(crime_data_clean, aes(x = crimes)) +
  geom_histogram(fill = "steelblue", color = "black", bins = 30) +
  labs(title = "Distribution of All Crimes",
       x = "Number of Cases",
       y = "Frequency") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

ggplot(crime_data_clean, aes(x = crimes, fill = type)) +
  geom_histogram(color = "black", bins = 30, position = "identity", alpha = 0.5) +
  labs(title = "Distribution of Cases by Crime Type",
       x = "Number of Cases",
       y = "Frequency") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "bottom",
        legend.title = element_blank()) +
  scale_fill_brewer(palette = "Set3")
```

```{r}
for(crime in unique(crime_data_clean$type)) {
  crime_data <- subset(crime_district_malaysia_sf, type == crime)
  
  print(
    ggplot(crime_data, aes(x = crimes)) +
      geom_histogram(fill = "lightblue", color = "black", bins = 20) +
      labs(title = gsub("_", " ", toupper(crime)),
           x = "Number of Cases",
           y = "Frequency") +
      theme_minimal() +
      theme(plot.title = element_text(hjust = 0.5))
  )
}
```

## **Summary**

```{r}
category_summary <- crime_data_clean %>%
  group_by(category) %>%
  summarise(
    Count = n(),
    Mean_Cases = mean(crimes),
    Median_Cases = median(crimes),
    SD_Cases = sd(crimes),
    Min_Cases = min(crimes),
    Max_Cases = max(crimes),
    Total_Cases = sum(crimes)
  ) %>%
  mutate(
    Percentage_of_Total = (Total_Cases / sum(Total_Cases)) * 100
  )

print("Summary Statistics by Category:")
print(category_summary)
```

```{r}
detailed_summary <- crime_data_clean %>%
  group_by(category, type) %>%
  summarise(
    Count = n(),
    Mean_Cases = mean(crimes),
    Median_Cases = median(crimes),
    Total_Cases = sum(crimes)
  ) %>%
  arrange(category, desc(Total_Cases))

print("\nDetailed Summary by Category and Type:")
print(detailed_summary)
```

```{r}
type_distribution <- crime_data_clean %>%
  group_by(category, type) %>%
  summarise(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)

print("\nPercentage Distribution of Types within Categories:")
print(type_distribution)
```
