{
  "hash": "6a512bb92f9f1bd6992dbe92497e987d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home_Ex03\"\nauther: \"Hei Yee Kai\"\ndate: \"October 30, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\nformat:\n  html:\n    toc: true\n---\n\n\n# 1. Introduction\n\n## 1.1 Objectives\n\nThis study explores the spatial distribution and composition of crime across the states and districts of Malaysia. By leveraging a comprehensive dataset of crime incidents, we will conduct an extensive Exploratory Data Analysis (EDA) to uncover key insights and trends.\n\nThe exercise will focus only on one page consisting of all portions that I am responsible for. This includes:\n\n1.  **State-Level Analysis**: We will create a choropleth map to illustrate the distribution of crime rates across the states of West Malaysia. This will help identify high-crime and low-crime regions at the state level.\n\n2.  **District-Level Analysis**: Drilling down further, we will generate district-level choropleth maps for selected states. This will reveal the within-state variations in crime patterns and pinpoint local hotspots and coldspots.\n\n3.  **Category-Level Analysis**: We will examine the distribution of crime rates by category (e.g., assault, property) using histograms. This will provide insights into the composition and relative prevalence of different crime types.\n\n4.  **Type-Level Analysis**: Complementing the category-level view, we will create pie charts to showcase the overall and district-specific breakdown of crime types. This will help understand the composition of criminal activities in the region.\n\nBy conducting this comprehensive EDA, we aim to uncover valuable spatial and categorical insights that can inform evidence-based policymaking, resource allocation, and targeted interventions to enhance public safety in Malaysia.\n\n## 1.2 UI\n\nThe results would be displayed in a map using Shiny App, and the initial proposed layout is as followed:\n\n![](images/clipboard-812728989.png)\n\nTo insert the user input specifications and controls, Shiny has functions like sliderInput(), selectInput(), textInput(), numericInput(), checkboxInput(), and checkboxGroupInput().\n\n![](images/clipboard-3062881648.png)\n\n# 2. Packages and Data\n\n## 2.1 Packages Required\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, st, tidyverse, raster, tmap, tmaptools, ggplot2, \n               spatstat, sfdep, ClustGeo, ggpubr, cluster, factoextra, \n               NbClust, heatmaply, corrplot, psych, tidyverse, GGally)\n```\n:::\n\n\n## 2.2 Data Required\n\nThere are two datasets being used in this exercise.\n\n-   [Malaysia – Crime by District and Crime Type](https://data.gov.my/data-catalogue/crime_district) from data.gov.my in csv format.\n\n-   [Malaysia - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-mys) with included administrative regions in shapefile format.\n\n-   [Malaysia – Annual Principal Labour Force Statistics by District](https://data.gov.my/data-catalogue/lfs_district) from data.gov.my in csv format.\n\n-   [Malaysia – Household Income and Expenditure: Administrative Districts](https://data.gov.my/data-catalogue/hies_district) from data.gov.my in csv format.\n\n-   [Malaysia – Enrolment in Government Schools by District](https://data.gov.my/data-catalogue/enrolment_school_district) from data.gov.my in csv format.\n\n-   [Malaysia – Enrolment in Government Schools by District](https://data.gov.my/data-catalogue/enrolment_school_district) from data.gov.my in csv format.\n\nWe first import the crime rate csv file into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df <- read_csv(\"data/crime_district.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 19152 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): state, district, category, type\ndbl  (1): crimes\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\npopulation_df <- read_csv(\"data/population_district.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 319200 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): state, district, sex, age, ethnicity\ndbl  (1): population\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nNext, we import the administrative regions of Malaysia.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmys_sf <- read_sf(dsn = \"data/my_shp\", \n                 layer = \"mys_admbnda_adm2_unhcr_20210211\") %>%\n          st_transform(crs = 3168)\n```\n:::\n\n\n## 2.3 Wrangling\n\n### 2.3.1 Data Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"Unique states in crime_df:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Unique states in crime_df:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(crime_df$state)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Malaysia\"          \"Johor\"             \"Kedah\"            \n [4] \"Kelantan\"          \"Melaka\"            \"Negeri Sembilan\"  \n [7] \"Pahang\"            \"Perak\"             \"Perlis\"           \n[10] \"Pulau Pinang\"      \"Sabah\"             \"Sarawak\"          \n[13] \"Selangor\"          \"Terengganu\"        \"W.P. Kuala Lumpur\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Unique states in population_df:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Unique states in population_df:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(crime_df$state)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Malaysia\"          \"Johor\"             \"Kedah\"            \n [4] \"Kelantan\"          \"Melaka\"            \"Negeri Sembilan\"  \n [7] \"Pahang\"            \"Perak\"             \"Perlis\"           \n[10] \"Pulau Pinang\"      \"Sabah\"             \"Sarawak\"          \n[13] \"Selangor\"          \"Terengganu\"        \"W.P. Kuala Lumpur\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Unique states in mys_sf:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Unique states in mys_sf:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(mys_sf$ADM1_EN)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Johor\"             \"Kedah\"             \"Kelantan\"         \n [4] \"W.P. Kuala Lumpur\" \"W.P. Labuan\"       \"Melaka\"           \n [7] \"Negeri Sembilan\"   \"Pahang\"            \"Perak\"            \n[10] \"Perlis\"            \"Pulau Pinang\"      \"Sabah\"            \n[13] \"Sarawak\"           \"Terengganu\"        \"W.P. Putrajaya\"   \n[16] \"Selangor\"         \n```\n\n\n:::\n:::\n\n\nConvert state and district to upper for matching\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df <- crime_df %>%\n              mutate(year = year(date),\n                     state = toupper(state),\n                     district = toupper(district))\ncrime_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19,152 × 7\n   state    district category type           date       crimes  year\n   <chr>    <chr>    <chr>    <chr>          <date>      <dbl> <dbl>\n 1 MALAYSIA ALL      assault  all            2016-01-01  22327  2016\n 2 MALAYSIA ALL      assault  all            2017-01-01  21366  2017\n 3 MALAYSIA ALL      assault  all            2018-01-01  16902  2018\n 4 MALAYSIA ALL      assault  all            2019-01-01  16489  2019\n 5 MALAYSIA ALL      assault  all            2020-01-01  13279  2020\n 6 MALAYSIA ALL      assault  all            2021-01-01  11495  2021\n 7 MALAYSIA ALL      assault  all            2022-01-01  10348  2022\n 8 MALAYSIA ALL      assault  all            2023-01-01  10453  2023\n 9 MALAYSIA ALL      assault  causing_injury 2016-01-01   5531  2016\n10 MALAYSIA ALL      assault  causing_injury 2017-01-01   5024  2017\n# ℹ 19,142 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation_df <- population_df %>%\n              mutate(year = year(date),\n                     state = toupper(state),\n                     district = toupper(district))\npopulation_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 319,200 × 8\n   state district   date       sex   age     ethnicity        population  year\n   <chr> <chr>      <date>     <chr> <chr>   <chr>                 <dbl> <dbl>\n 1 JOHOR BATU PAHAT 2020-01-01 both  overall overall               495.   2020\n 2 JOHOR BATU PAHAT 2020-01-01 both  overall bumi_malay            311.   2020\n 3 JOHOR BATU PAHAT 2020-01-01 both  overall bumi_other              5.1  2020\n 4 JOHOR BATU PAHAT 2020-01-01 both  overall chinese               140.   2020\n 5 JOHOR BATU PAHAT 2020-01-01 both  overall indian                  6.9  2020\n 6 JOHOR BATU PAHAT 2020-01-01 both  overall other_citizen           1.8  2020\n 7 JOHOR BATU PAHAT 2020-01-01 both  overall other_noncitizen       30.2  2020\n 8 JOHOR BATU PAHAT 2020-01-01 both  0-4     overall                30.3  2020\n 9 JOHOR BATU PAHAT 2020-01-01 both  0-4     bumi_malay             21.3  2020\n10 JOHOR BATU PAHAT 2020-01-01 both  0-4     bumi_other              0.5  2020\n# ℹ 319,190 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmys_sf <- mys_sf %>%\n          mutate(ADM1_EN = toupper(ADM1_EN),\n                 ADM2_EN = toupper(ADM2_EN))\n\nmys_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 144 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 94420.8 xmax: 2380932 ymax: 829136\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 144 × 15\n   ADM2_EN  ADM2_PCODE ADM2_REF ADM2ALT1EN ADM2ALT2EN ADM1_EN ADM1_PCODE ADM0_EN\n * <chr>    <chr>      <chr>    <chr>      <chr>      <chr>   <chr>      <chr>  \n 1 BATU PA… MY0101     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 2 JOHOR B… MY0102     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 3 KLUANG   MY0103     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 4 KOTA TI… MY0104     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 5 KULAIJA… MY0105     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 6 LEDANG   MY0106     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 7 MERSING  MY0107     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 8 MUAR     MY0108     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 9 PONTIAN  MY0109     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n10 SEGAMAT  MY0110     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n# ℹ 134 more rows\n# ℹ 7 more variables: ADM0_PCODE <chr>, date <date>, validOn <date>,\n#   validTo <date>, Shape_Leng <dbl>, Shape_Area <dbl>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n### 2.3.2 Checking for Mismatch (State)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assuming you have two character vectors:\nstate_crime <- unique(crime_df$state)\nstate_sf <- unique(mys_sf$ADM1_EN)\n\n# Find states in crime_df that are not in mys_sf\nmissing_in_sf <- setdiff(state_crime, state_sf)\n\n# Find states in mys_sf that are not in crime_df\nmissing_in_crime <- setdiff(state_sf, state_crime)\n\n# Print the mismatches\nprint(\"States in crime_df not found in mys_sf:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"States in crime_df not found in mys_sf:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(missing_in_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"MALAYSIA\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"States in mys_sf not found in crime_df:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"States in mys_sf not found in crime_df:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(missing_in_crime)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"W.P. LABUAN\"    \"W.P. PUTRAJAYA\"\n```\n\n\n:::\n:::\n\n\n### 2.3.3 Cleaning (State)\n\nHowever in this case study, for ease of analysis, we choose to focus on West Malaysia, and thus will be filtering out Sarawak, Sabah and Labuan.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmys_sf <- mys_sf %>%\n          filter(ADM1_EN != 'W.P. LABUAN' & ADM1_EN != 'SABAH' & ADM1_EN != 'SARAWAK') %>%\n          mutate(ADM1_EN = replace(ADM1_EN, ADM1_EN == 'W.P. KUALA LUMPUR', 'KUALA LUMPUR'),\n                 ADM1_EN = replace(ADM1_EN, ADM1_EN == 'W.P. PUTRAJAYA', 'KUALA LUMPUR'))\n\nmys_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 87 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 87 × 15\n   ADM2_EN  ADM2_PCODE ADM2_REF ADM2ALT1EN ADM2ALT2EN ADM1_EN ADM1_PCODE ADM0_EN\n * <chr>    <chr>      <chr>    <chr>      <chr>      <chr>   <chr>      <chr>  \n 1 BATU PA… MY0101     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 2 JOHOR B… MY0102     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 3 KLUANG   MY0103     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 4 KOTA TI… MY0104     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 5 KULAIJA… MY0105     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 6 LEDANG   MY0106     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 7 MERSING  MY0107     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 8 MUAR     MY0108     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n 9 PONTIAN  MY0109     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n10 SEGAMAT  MY0110     <NA>     <NA>       <NA>       JOHOR   MY01       Malays…\n# ℹ 77 more rows\n# ℹ 7 more variables: ADM0_PCODE <chr>, date <date>, validOn <date>,\n#   validTo <date>, Shape_Leng <dbl>, Shape_Area <dbl>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df <- crime_df %>%\n              filter(state != 'MALAYSIA' & state != 'SABAH' & state != 'SARAWAK' & \n                     district != 'ALL' & type != 'all') %>%\n              mutate(state = replace(state, state == 'W.P. KUALA LUMPUR', 'KUALA LUMPUR'))\ncrime_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10,368 × 7\n   state district   category type           date       crimes  year\n   <chr> <chr>      <chr>    <chr>          <date>      <dbl> <dbl>\n 1 JOHOR BATU PAHAT assault  causing_injury 2016-01-01     39  2016\n 2 JOHOR BATU PAHAT assault  causing_injury 2017-01-01     41  2017\n 3 JOHOR BATU PAHAT assault  causing_injury 2018-01-01     28  2018\n 4 JOHOR BATU PAHAT assault  causing_injury 2019-01-01     41  2019\n 5 JOHOR BATU PAHAT assault  causing_injury 2020-01-01     43  2020\n 6 JOHOR BATU PAHAT assault  causing_injury 2021-01-01     22  2021\n 7 JOHOR BATU PAHAT assault  causing_injury 2022-01-01     19  2022\n 8 JOHOR BATU PAHAT assault  causing_injury 2023-01-01     22  2023\n 9 JOHOR BATU PAHAT assault  murder         2016-01-01      6  2016\n10 JOHOR BATU PAHAT assault  murder         2017-01-01      0  2017\n# ℹ 10,358 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation_df <- population_df %>%\n          filter(state != 'SABAH' & state != 'SARAWAK' & state != 'W.P. LABUAN' &\n                 sex == \"both\" & age == \"overall\" & ethnicity == \"overall\" ) %>%\n          mutate(state = replace(state, state == 'W.P. KUALA LUMPUR', 'KUALA LUMPUR'),\n                 state = replace(state, state == 'W.P. PUTRAJAYA', 'KUALA LUMPUR')) %>%\n          dplyr::select(state, district, year, population)\npopulation_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 276 × 4\n   state district     year population\n   <chr> <chr>       <dbl>      <dbl>\n 1 JOHOR BATU PAHAT   2020      495. \n 2 JOHOR JOHOR BAHRU  2020     1711. \n 3 JOHOR KLUANG       2020      324. \n 4 JOHOR KOTA TINGGI  2020      222. \n 5 JOHOR KULAI        2020      330. \n 6 JOHOR MERSING      2020       78.2\n 7 JOHOR MUAR         2020      315. \n 8 JOHOR PONTIAN      2020      173. \n 9 JOHOR SEGAMAT      2020      198. \n10 JOHOR TANGKAK      2020      163. \n# ℹ 266 more rows\n```\n\n\n:::\n:::\n\n\n### 2.3.4 Crime (State-District)\n\n#### 2.3.4.1 Check for Mismatch\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df <- crime_df %>% mutate(state_district = paste(state, district, sep = \"-\"))\nmys_sf <- mys_sf %>% mutate(state_district = paste(ADM1_EN, ADM2_EN, sep = \"-\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assuming you have two character vectors:\nstate_district_crime <- unique(crime_df$state_district)\nstate_district_sf <- unique(mys_sf$state_district)\n\n# Find mismatches\nmissing_in_sf <- setdiff(state_district_crime, state_district_sf)\nmissing_in_crime <- setdiff(state_district_sf, state_district_crime)\n\n# Print the mismatches\nprint(\"State-District combinations in crime_df not found in mys_sf:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"State-District combinations in crime_df not found in mys_sf:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(missing_in_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"JOHOR-ISKANDAR PUTERI\"               \"JOHOR-JOHOR BAHRU SELATAN\"          \n [3] \"JOHOR-JOHOR BAHRU UTARA\"             \"JOHOR-NUSAJAYA\"                     \n [5] \"JOHOR-SERI ALAM\"                     \"KEDAH-BANDAR BHARU\"                 \n [7] \"NEGERI SEMBILAN-NILAI\"               \"PAHANG-CAMERON HIGHLAND\"            \n [9] \"PAHANG-KUALA LIPIS\"                  \"PERAK-BATU GAJAH\"                   \n[11] \"PERAK-GERIK\"                         \"PERAK-IPOH\"                         \n[13] \"PERAK-MANJUNG\"                       \"PERAK-PENGKALAN HULU\"               \n[15] \"PERAK-SELAMA\"                        \"PERAK-SUNGAI SIPUT\"                 \n[17] \"PERAK-TAIPING\"                       \"PERAK-TANJONG MALIM\"                \n[19] \"PERAK-TAPAH\"                         \"PERLIS-ARAU\"                        \n[21] \"PERLIS-KANGAR\"                       \"PERLIS-PADANG BESAR\"                \n[23] \"PULAU PINANG-SEBERANG PERAI SELATAN\" \"PULAU PINANG-SEBERANG PERAI TENGAH\" \n[25] \"PULAU PINANG-SEBERANG PERAI UTARA\"   \"SELANGOR-AMPANG JAYA\"               \n[27] \"SELANGOR-HULU SELANGOR\"              \"SELANGOR-KAJANG\"                    \n[29] \"SELANGOR-KLANG SELATAN\"              \"SELANGOR-KLANG UTARA\"               \n[31] \"SELANGOR-PETALING JAYA\"              \"SELANGOR-SERDANG\"                   \n[33] \"SELANGOR-SG. BULOH\"                  \"SELANGOR-SHAH ALAM\"                 \n[35] \"SELANGOR-SUBANG JAYA\"                \"SELANGOR-SUNGAI BULOH\"              \n[37] \"KUALA LUMPUR-BRICKFIELDS\"            \"KUALA LUMPUR-CHERAS\"                \n[39] \"KUALA LUMPUR-DANG WANGI\"             \"KUALA LUMPUR-SENTUL\"                \n[41] \"KUALA LUMPUR-WANGSA MAJU\"           \n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"State-District combinations in mys_sf not found in crime_df:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"State-District combinations in mys_sf not found in crime_df:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(missing_in_crime)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"JOHOR-JOHOR BAHRU\"             \"KEDAH-POKOK SENA\"             \n [3] \"KUALA LUMPUR-WP. KUALA LUMPUR\" \"PAHANG-LIPIS\"                 \n [5] \"PERAK-BATANG PADANG\"           \"PERAK-ULU PERAK\"              \n [7] \"PERAK-KINTA\"                   \"PERAK-LARUT DAN MATANG\"       \n [9] \"PERAK-MANJUNG (DINDING)\"       \"PERLIS-PERLIS\"                \n[11] \"PULAU PINANG-S.P.SELATAN\"      \"PULAU PINANG-S.P. TENGAH\"     \n[13] \"PULAU PINANG-S.P. UTARA\"       \"SELANGOR-ULU LANGAT\"          \n[15] \"SELANGOR-ULU SELANGOR\"         \"SELANGOR-KLANG\"               \n[17] \"SELANGOR-PETALING\"            \n```\n\n\n:::\n:::\n\n\n#### 2.3.4.2 Cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df <- crime_df %>%\n  mutate(district = case_when(\n    state == \"JOHOR\" & district %in% c(\"ISKANDAR PUTERI\", \"NUSAJAYA\", \"JOHOR BAHRU SELATAN\", \"JOHOR BAHRU UTARA\", \"SERI ALAM\") ~ \"JOHOR BAHRU\",\n    state == \"NEGERI SEMBILAN\" & district == \"NILAI\" ~ \"SEREMBAN\",\n    state == \"KEDAH\" & district == \"BANDAR BHARU\" ~ \"BANDAR BAHARU\",\n    state == \"PAHANG\" & district == \"CAMERON HIGHLAND\" ~ \"CAMERON HIGHLANDS\",\n    state == \"PAHANG\" & district == \"KUALA LIPIS\" ~ \"LIPIS\",\n    state == \"PERAK\" & district  %in% c(\"BATU GAJAH\", \"IPOH\") ~ \"KINTA\",\n    state == \"PERAK\" & district == \"GERIK\" ~ \"ULU PERAK\",\n    state == \"PERAK\" & district == \"MANJUNG\" ~ \"MANJUNG (DINDING)\",\n    state == \"PERAK\" & district == \"PENGKALAN HULU\" ~ \"ULU PERAK\",\n    state == \"PERAK\" & district %in% c(\"SELAMA\", \"TAIPING\") ~ \"LARUT DAN MATANG\",\n    state == \"PERAK\" & district == \"SUNGAI SIPUT\" ~ \"KUALA KANGSAR\",\n    state == \"PERAK\" & district %in% c(\"TANJONG MALIM\", \"TAPAH\") ~ \"BATANG PADANG\",\n    state == \"PERLIS\" & district %in% c(\"ARAU\", \"KANGAR\", \"PADANG BESAR\") ~ \"PERLIS\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI SELATAN\" ~ \"S.P.SELATAN\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI TENGAH\" ~ \"S.P. TENGAH\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI UTARA\" ~ \"S.P. UTARA\",\n    state == \"SELANGOR\" & district == \"AMPANG JAYA\" ~ \"GOMBAK\",\n    state == \"SELANGOR\" & district == \"HULU SELANGOR\" ~ \"ULU SELANGOR\",\n    state == \"SELANGOR\" & district == \"KAJANG\" ~ \"ULU LANGAT\",\n    state == \"SELANGOR\" & district %in% c(\"KLANG SELATAN\", \"KLANG UTARA\") ~ \"KLANG\",\n    state == \"SELANGOR\" & district %in% c(\"PETALING JAYA\", \"SERDANG\", \"SG. BULOH\", \"SHAH ALAM\", \"SUBANG JAYA\", \"SUNGAI BULOH\") ~ \"PETALING\",\n    state == \"KUALA LUMPUR\" & district %in% c(\"BRICKFIELDS\", \"CHERAS\", \"DANG WANGI\", \"SENTUL\", \"WANGSA MAJU\") ~ \"WP. KUALA LUMPUR\",\n    TRUE ~ district\n  )) %>%\n  group_by(state, district, year, category, type) %>%\n  summarise(crimes = sum(crimes))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state', 'district', 'year', 'category'.\nYou can override using the `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mys_sf) +\n  tm_polygons() +\n  tm_text(\"ADM2_EN\", size = 0.3)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n#### 2.3.4.3 Visualizing Crime Distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df_mys <- crime_df %>%\n  filter(year >= 2019 & year <= 2022) %>%\n  left_join(mys_sf, by = c(\"state\" = \"ADM1_EN\", \"district\" = \"ADM2_EN\")) %>%\n  dplyr::select(state, district, year, category, type, crimes, geometry)\n\ncrime_df_mys <- st_as_sf(crime_df_mys)\ncrime_df_mys\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 4128 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 4,128 × 7\n# Groups:   state, district, year, category [688]\n   state district    year category type         crimes                  geometry\n   <chr> <chr>      <dbl> <chr>    <chr>         <dbl>        <MULTIPOLYGON [m]>\n 1 JOHOR BATU PAHAT  2019 assault  causing_inj…     41 (((556714.6 192051.6, 55…\n 2 JOHOR BATU PAHAT  2019 assault  murder            3 (((556714.6 192051.6, 55…\n 3 JOHOR BATU PAHAT  2019 assault  rape             29 (((556714.6 192051.6, 55…\n 4 JOHOR BATU PAHAT  2019 assault  robbery_gan…      0 (((556714.6 192051.6, 55…\n 5 JOHOR BATU PAHAT  2019 assault  robbery_gan…     37 (((556714.6 192051.6, 55…\n 6 JOHOR BATU PAHAT  2019 assault  robbery_sol…      0 (((556714.6 192051.6, 55…\n 7 JOHOR BATU PAHAT  2019 assault  robbery_sol…     29 (((556714.6 192051.6, 55…\n 8 JOHOR BATU PAHAT  2019 property break_in        157 (((556714.6 192051.6, 55…\n 9 JOHOR BATU PAHAT  2019 property theft_other     127 (((556714.6 192051.6, 55…\n10 JOHOR BATU PAHAT  2019 property theft_vehic…      4 (((556714.6 192051.6, 55…\n# ℹ 4,118 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ncrime_df_mys_grp <- crime_df_mys %>%\n  group_by(state, district) %>%\n  summarize(total_crimes = sum(crimes))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nchoro <- tm_shape(crime_df_mys_grp) +\n  tm_fill(\"total_crimes\", \n          style = \"pretty\", \n          palette = \"Blues\",\n          title = \"Crimes\") +\n  tm_layout(main.title = \"Distribution of crime in West Malaysia\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n\nchoro\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n### 2.3.5 Population (State-District)\n\n#### 2.3.5.1 Check for Mismatch\n\nThe year 2019 is missing from data set, hence we will map year 2020 -\\> 2019.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation_row <- population_df %>%\n  filter(year == 2020) %>%\n  mutate(year = 2019) \npopulation_df <- bind_rows(population_df, population_row)\nunique(population_df$year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2020 2021 2022 2019\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation_df <- population_df %>% mutate(state_district = paste(state, district, sep = \"-\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assuming you have two character vectors:\nstate_district_population <- unique(population_df$state_district)\n\n# Find mismatches\nmissing_in_sf <- setdiff(state_district_population, state_district_sf)\nmissing_in_population <- setdiff(state_district_sf, state_district_population)\n\n# Print the mismatches\nprint(\"State-District combinations in population_df not found in mys_sf:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"State-District combinations in population_df not found in mys_sf:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(missing_in_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"JOHOR-KULAI\"                         \"JOHOR-TANGKAK\"                      \n [3] \"KELANTAN-KECIL LOJING\"               \"PERAK-BAGAN DATUK\"                  \n [5] \"PERAK-HULU PERAK\"                    \"PERAK-MANJUNG\"                      \n [7] \"PERAK-MUALLIM\"                       \"PERAK-SELAMA\"                       \n [9] \"PULAU PINANG-SEBERANG PERAI SELATAN\" \"PULAU PINANG-SEBERANG PERAI TENGAH\" \n[11] \"PULAU PINANG-SEBERANG PERAI UTARA\"   \"TERENGGANU-KUALA NERUS\"             \n[13] \"KUALA LUMPUR-W.P. KUALA LUMPUR\"      \"PAHANG-CAMERON HIGHLAND\"            \n[15] \"PULAU PINANG-SP SELATAN\"             \"PULAU PINANG-SP TENGAH\"             \n[17] \"PULAU PINANG-SP UTARA\"              \n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"State-District combinations in mys_sf not found in population_df:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"State-District combinations in mys_sf not found in population_df:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(missing_in_population)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"JOHOR-KULAIJAYA\"               \"JOHOR-LEDANG\"                 \n[3] \"KUALA LUMPUR-WP. KUALA LUMPUR\" \"PERAK-ULU PERAK\"              \n[5] \"PERAK-MANJUNG (DINDING)\"       \"PULAU PINANG-S.P.SELATAN\"     \n[7] \"PULAU PINANG-S.P. TENGAH\"      \"PULAU PINANG-S.P. UTARA\"      \n```\n\n\n:::\n:::\n\n\n#### 2.3.5.2 Cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation_df <- population_df %>%\n  mutate(district = case_when(\n    state == \"JOHOR\" & district == \"KULAI\" ~ \"KULAIJAYA\",\n    state == \"JOHOR\" & district == \"TANGKAK\" ~ \"LEDANG\",\n    state == \"KELANTAN\" & district == \"KECIL LOJING\" ~ \"GUA MUSANG\",\n    state == \"PAHANG\" & district == \"CAMERON HIGHLAND\" ~ \"CAMERON HIGHLANDS\",\n    state == \"PERAK\" & district == \"HULU PERAK\" ~ \"ULU PERAK\",\n    state == \"PERAK\" & district == \"BAGAN DATUK\" ~ \"HILIR PERAK\",\n    state == \"PERAK\" & district == \"MANJUNG\" ~ \"MANJUNG (DINDING)\",\n    state == \"PERAK\" & district == \"MUALLIM\" ~ \"BATANG PADANG\",\n    state == \"PERAK\" & district == \"SELAMA\" ~ \"LARUT DAN MATANG\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI SELATAN\" ~ \"S.P.SELATAN\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI TENGAH\" ~ \"S.P. TENGAH\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI UTARA\" ~ \"S.P. UTARA\",\n    state == \"PULAU PINANG\" & district == \"SP SELATAN\" ~ \"S.P.SELATAN\",\n    state == \"PULAU PINANG\" & district == \"SP TENGAH\" ~ \"S.P. TENGAH\",\n    state == \"PULAU PINANG\" & district == \"SP UTARA\" ~ \"S.P. UTARA\",\n    state == \"TERENGGANU\" & district == \"KUALA NERUS\" ~ \"KUALA TERENGGANU\",\n    state == \"KUALA LUMPUR\" & district == \"W.P. KUALA LUMPUR\" ~ \"WP. KUALA LUMPUR\",\n    TRUE ~ district\n  )) %>%\n  group_by(state, district, year) %>%\n  summarise(population = sum(population))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state', 'district'. You can override using\nthe `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\npopulation_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 348 × 4\n# Groups:   state, district [87]\n   state district     year population\n   <chr> <chr>       <dbl>      <dbl>\n 1 JOHOR BATU PAHAT   2019       495.\n 2 JOHOR BATU PAHAT   2020       495.\n 3 JOHOR BATU PAHAT   2021       497.\n 4 JOHOR BATU PAHAT   2022       498.\n 5 JOHOR JOHOR BAHRU  2019      1711.\n 6 JOHOR JOHOR BAHRU  2020      1711.\n 7 JOHOR JOHOR BAHRU  2021      1715.\n 8 JOHOR JOHOR BAHRU  2022      1724.\n 9 JOHOR KLUANG       2019       324.\n10 JOHOR KLUANG       2020       324.\n# ℹ 338 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mys_sf) +\n  tm_polygons() +\n  tm_text(\"ADM2_EN\", size = 0.3)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n### 2.3.6 Joining\n\n#### 2.3.6.1 Join with Population Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df_mys <- crime_df %>% \n  filter(year >= 2019 & year <= 2022) %>%\n  left_join(population_df, by = c(\"state\", \"district\", \"year\")) %>%\n  mutate(crimes_pc = crimes/population) %>%\n  dplyr::select(state, district, year, category, type, crimes, crimes_pc, population)\n```\n:::\n\n\n#### 2.3.6.2 Create for Pokok Sena District\n\n\n::: {.cell}\n\n```{.r .cell-code}\npokok_sena_rows <- crime_df_mys %>%\n  filter(state == \"KEDAH\") %>%\n  group_by(state, year, category, type) %>%\n  summarise(crimes = mean(crimes),\n            crimes_pc = mean(crimes_pc),\n            population = mean(population)) %>% \n  mutate(district = \"POKOK SENA\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state', 'year', 'category'. You can\noverride using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\npokok_sena_rows\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 48 × 8\n# Groups:   state, year, category [8]\n   state  year category type                crimes crimes_pc population district\n   <chr> <dbl> <chr>    <chr>                <dbl>     <dbl>      <dbl> <chr>   \n 1 KEDAH  2019 assault  causing_injury      29.8    0.140          189. POKOK S…\n 2 KEDAH  2019 assault  murder               1.82   0.0129         189. POKOK S…\n 3 KEDAH  2019 assault  rape                13.2    0.0752         189. POKOK S…\n 4 KEDAH  2019 assault  robbery_gang_armed   0.182  0.00155        189. POKOK S…\n 5 KEDAH  2019 assault  robbery_gang_unar…  25.3    0.0992         189. POKOK S…\n 6 KEDAH  2019 assault  robbery_solo_armed   0.182  0.000410       189. POKOK S…\n 7 KEDAH  2019 assault  robbery_solo_unar…  14.7    0.0590         189. POKOK S…\n 8 KEDAH  2019 property break_in           103.     0.440          189. POKOK S…\n 9 KEDAH  2019 property theft_other         86.9    0.479          189. POKOK S…\n10 KEDAH  2019 property theft_vehicle_lor…   7.09   0.0202         189. POKOK S…\n# ℹ 38 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ncrime_df_mys <- bind_rows(crime_df_mys, pokok_sena_rows)\n```\n:::\n\n\n#### 2.3.6.3 Join with District Boundary\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df_mys <- crime_df_mys %>%\n  left_join(mys_sf, by = c(\"state\" = \"ADM1_EN\", \"district\" = \"ADM2_EN\")) %>%\n  dplyr::select(state, district, year, category, type, crimes, crimes_pc, population, geometry)\n\ncrime_df_mys <- st_as_sf(crime_df_mys)\ncrime_df_mys\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 4176 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 4,176 × 9\n# Groups:   state, district, year, category [696]\n   state district    year category type              crimes crimes_pc population\n   <chr> <chr>      <dbl> <chr>    <chr>              <dbl>     <dbl>      <dbl>\n 1 JOHOR BATU PAHAT  2019 assault  causing_injury        41   0.0828        495.\n 2 JOHOR BATU PAHAT  2019 assault  murder                 3   0.00606       495.\n 3 JOHOR BATU PAHAT  2019 assault  rape                  29   0.0586        495.\n 4 JOHOR BATU PAHAT  2019 assault  robbery_gang_arm…      0   0             495.\n 5 JOHOR BATU PAHAT  2019 assault  robbery_gang_una…     37   0.0747        495.\n 6 JOHOR BATU PAHAT  2019 assault  robbery_solo_arm…      0   0             495.\n 7 JOHOR BATU PAHAT  2019 assault  robbery_solo_una…     29   0.0586        495.\n 8 JOHOR BATU PAHAT  2019 property break_in             157   0.317         495.\n 9 JOHOR BATU PAHAT  2019 property theft_other          127   0.256         495.\n10 JOHOR BATU PAHAT  2019 property theft_vehicle_lo…      4   0.00808       495.\n# ℹ 4,166 more rows\n# ℹ 1 more variable: geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n### 2.3.7 Visualizing the distribution of crime\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ncrime_df_mys_grp <- crime_df_mys %>%\n  group_by(state, district) %>%\n  summarize(total_crimes_pc = sum(crimes_pc)/4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nchoro <- tm_shape(crime_df_mys_grp) +\n  tm_fill(\"total_crimes_pc\", \n          style = \"pretty\", \n          palette = \"Blues\",\n          title = \"Crimes\") +\n  tm_layout(main.title = \"Distribution of crime in West Malaysia\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n\nchoro\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n# 3. EDA\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df_transformed <- crime_df_mys %>%\n  mutate(type = case_when(\n    grepl(\"robbery\", type) ~ \"robbery\",\n    grepl(\"theft\", type) ~ \"theft\",\n    TRUE ~ type\n  ))\n\nunique(crime_df_transformed$type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"causing_injury\" \"murder\"         \"rape\"           \"robbery\"       \n[5] \"break_in\"       \"theft\"         \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_overall_crime_type_pie <- function(data) {\n  type_crimes <- data %>%\n    group_by(type) %>%\n    summarise(total_crimes = sum(crimes)) %>%\n    arrange(desc(total_crimes))\n  \n  p <- ggplot(type_crimes, aes(x = \"\", y = total_crimes, fill = type)) +\n    geom_bar(width = 1, stat = \"identity\") +\n    coord_polar(\"y\", start = 0) +\n    theme_minimal() +\n    labs(\n      title = \"Overall Crime Type Composition\",\n      fill = \"Crime Type\",\n      x = NULL,\n      y = NULL\n    ) +\n    theme(\n      axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      panel.grid = element_blank(),\n      plot.title = element_text(hjust = 0.5)\n    ) +\n    geom_text(\n      aes(label = paste(type, \"\\n\", round(total_crimes, 0), \n                        \" (\", round(total_crimes/sum(total_crimes)*100, 1), \"%)\")),\n      position = position_stack(vjust = 0.5)\n    )\n  \n  return(p)\n}\n\noverall_crime_pie <- create_overall_crime_type_pie(crime_df_transformed)\n\noverall_crime_pie\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_type_summary <- function(data) {\n  type_summary <- data %>%\n    group_by(type) %>%\n    summarise(\n      total_crimes = sum(crimes),\n      mean_crimes = mean(crimes),\n      median_crimes = median(crimes),\n      crime_percentage = total_crimes / sum(data$crimes) * 100\n    ) %>%\n    arrange(desc(total_crimes))\n  \n  return(type_summary)\n}\n\ntype_summary <- create_type_summary(crime_df_transformed)\n\ntype_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 6\n  type           total_crimes mean_crimes median_crimes crime_percentage\n  <chr>                 <dbl>       <dbl>         <dbl>            <dbl>\n1 theft               128701.       92.5         24               59.2  \n2 break_in             41679.      120.          55.5             19.2  \n3 robbery              25908.       18.6          0.182           11.9  \n4 causing_injury       14829.       42.6         21                6.82 \n5 rape                  5398.       15.5         10                2.48 \n6 murder                 878.        2.52         1                0.404\n# ℹ 1 more variable: geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n## 3.1 Choropleth \n\n### 3.1.1 Choropleth Map for Overall Crime Rate by State\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(crime_df_transformed) +\n  tm_fill(\"crimes\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Crime Ratio\") +\n  tm_layout(main.title = \"Distribution of Crime Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_district_choropleth <- function(data, state_name, var_name) {\n  state_data <- data[data$state == state_name,]\n  tm_shape(state_data) +\n    tm_fill(var_name, \n            style = \"quantile\",\n            palette = \"Blues\",\n            title = paste(\"Crime Rate -\", var_name)) +\n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"Distribution of\", var_name, \"in\", state_name),\n              main.title.position = \"center\",\n              main.title.size = 1.2,\n              legend.height = 0.45, \n              legend.width = 0.35,\n              frame = TRUE) +\n    tm_grid(alpha =0.2)\n}\n\nplot_list <- list()\n\nfor (state in unique(crime_df_transformed$state)) {\n  district_map <- create_district_choropleth(crime_df_transformed, state, \"crimes\")\n    plot_list[[state]] <- district_map\n}\n\ntmap_arrange(plotlist = plot_list, ncol = 3, nrow = 4)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n### 3.1.2 Choropleth Map for Crime Rate per Capita by State\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(crime_df_transformed) +\n  tm_fill(\"crimes_pc\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Crime Ratio\") +\n  tm_layout(main.title = \"Distribution of Crime Per Capita Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_list <- list()\n\nfor (state in unique(crime_df_transformed$state)) {\n  district_map <- create_district_choropleth(crime_df_transformed, state, \"crimes_pc\")\n    plot_list[[state]] <- district_map\n}\n\ntmap_arrange(plotlist = plot_list, ncol = 3, nrow = 4)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n### 3.1.3 Choropleth Map for Overall Crime Rate by Category\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(crime_df_transformed$category)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n assault property \n    2436     1740 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nassault_data <- subset(crime_df_transformed, category == \"assault\")\n\ntm_shape(assault_data) +\n  tm_fill(\"crimes\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Crime Ratio\") +\n  tm_layout(main.title = \"Distribution of Assault Crime Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nproperty_data <- subset(crime_df_transformed, category == \"property\")\n\ntm_shape(property_data) +\n  tm_fill(\"crimes\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Crime Ratio\") +\n  tm_layout(main.title = \"Distribution of Property Crime Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n### 3.1.4 Choropleth Map for Crime Rate per Capita by Category\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(assault_data) +\n  tm_fill(\"crimes_pc\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Crime Ratio\") +\n  tm_layout(main.title = \"Distribution of Assault Crime per Capita Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(property_data) +\n  tm_fill(\"crimes_pc\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Crime Ratio\") +\n  tm_layout(main.title = \"Distribution of Property Crime per Capita Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n### 3.1.5 Choropleth Map for Overall Crime Rate by Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_crime_map <- function(data, crime_type) {\n  filtered_data <- data %>% filter(type == crime_type)\n  \n  tm_shape(filtered_data) +\n    tm_fill(\"crimes\", \n            style = \"quantile\",\n            palette = \"Blues\",\n            title = \"Crimes per Capita\") +\n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"Distribution of\", gsub(\"_\", \" \", crime_type)),\n              main.title.position = \"center\",\n              main.title.size = 1.2,\n              frame = TRUE) +\n    tm_grid(alpha = 0.39)\n}\n\nplot_list <- list()\n\n# Create maps for each type\nunique_types <- unique(crime_df_transformed$type)\nfor(type in unique_types) {\n  p <- create_crime_map(crime_df_transformed, type)\n  plot_list[[type]] <- p\n}\n\ntmap_arrange(plotlist = plot_list, ncol = 2, nrow = 3)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n### 3.1.6 Choropleth Map for Crime Rate per Capita by Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(crime_df_mys$type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n                break_in           causing_injury                   murder \n                     348                      348                      348 \n                    rape       robbery_gang_armed     robbery_gang_unarmed \n                     348                      348                      348 \n      robbery_solo_armed     robbery_solo_unarmed              theft_other \n                     348                      348                      348 \n     theft_vehicle_lorry   theft_vehicle_motorcar theft_vehicle_motorcycle \n                     348                      348                      348 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_crime_map <- function(data, crime_type) {\n  filtered_data <- data %>% filter(type == crime_type)\n  \n  tm_shape(filtered_data) +\n    tm_fill(\"crimes_pc\", \n            style = \"quantile\",\n            palette = \"Blues\",\n            title = \"Crimes per Capita\") +\n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"Distribution of\", gsub(\"_\", \" \", crime_type)),\n              main.title.position = \"center\",\n              main.title.size = 1.2,\n              frame = TRUE) +\n    tm_grid(alpha = 0.39)\n}\n\nplot_list <- list()\n\n# Create maps for each type\nunique_types <- unique(crime_df_transformed$type)\nfor(type in unique_types) {\n  p <- create_crime_map(crime_df_transformed, type)\n  plot_list[[type]] <- p\n}\n\ntmap_arrange(plotlist = plot_list, ncol = 2, nrow = 3)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n## 3.2 Histogram\n\n### 3.1.1 Histogram for Overall Crime Rate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(crime_df_transformed, aes(x = crimes)) +\n  geom_histogram(fill = \"steelblue\", color = \"black\", bins = 30) +\n  labs(title = \"Distribution of All Crimes\",\n       x = \"Number of Cases\",\n       y = \"Frequency\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n### 3.1.2 Histogram for Overall Crime Rate by State\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(crime_df_transformed, aes(x = crimes, fill = state)) +\n  geom_histogram(bins = 30, alpha = 0.7) +\n  facet_wrap(~state, scales = \"free\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45)) +\n  labs(title = \"Distribution of Crimes by State\",\n       x = \"Number of Crimes\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\n### 3.1.3 Histogram for Crime Rate per Capita by State\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(crime_df_transformed, aes(x = crimes_pc, fill = state)) +\n  geom_histogram(bins = 30, alpha = 0.7) +\n  facet_wrap(~state, scales = \"free\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45)) +\n  labs(title = \"Distribution of Crimes by State\",\n       x = \"Number of Crimes\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n### 3.1.4 Histogram for Overall Crime Rate by Category\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(crime_df_transformed, aes(x = crimes, fill = category)) +\n  geom_histogram(bins = 30, alpha = 0.7) +\n  facet_wrap(~category) +\n  theme_minimal() +\n  labs(title = \"Distribution of Crime Rates by Category\",\n       x = \"Crimes\",\n       y = \"Count\")\n\np1\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(crime_df_transformed, aes(x = category, y = crimes, fill = category)) +\n  geom_boxplot() +\n  labs(title = \"Distribution of Crime Cases by Category\",\n       x = \"Category\",\n       y = \"Number of Cases\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position = \"none\") +\n  scale_fill_manual(values = c(\"assault\" = \"#FF9999\", \"property\" = \"#66B2FF\"))\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n### 3.1.5 Histogram for Crime Rate per Capita by Category\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(crime_df_transformed, aes(x = crimes_pc, fill = category)) +\n  geom_histogram(bins = 30, alpha = 0.7) +\n  facet_wrap(~category) +\n  theme_minimal() +\n  labs(title = \"Distribution of Crime Rates per Capita by Category\",\n       x = \"Crimes per Capita\",\n       y = \"Count\")\n\np1\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(crime_df_transformed, aes(x = category, y = crimes_pc, fill = category)) +\n  geom_boxplot() +\n  labs(title = \"Distribution of Crime Cases by Category\",\n       x = \"Category\",\n       y = \"Number of Cases\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position = \"none\") +\n  scale_fill_manual(values = c(\"assault\" = \"#FF9999\", \"property\" = \"#66B2FF\"))\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n### 3.1.6 Histogram for Overall Crime Rate by Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(crime_df_transformed, aes(x = crimes, fill = type)) +\n  geom_histogram(color = \"black\", bins = 30, position = \"identity\", alpha = 0.5) +\n  labs(title = \"Distribution of Cases by Crime Type\",\n       x = \"Number of Cases\",\n       y = \"Frequency\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position = \"bottom\",\n        legend.title = element_blank()) +\n  scale_fill_brewer(palette = \"Set3\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(crime in unique(crime_df_transformed$type)) {\n  crime_data <- subset(crime_df_transformed, type == crime)\n  \n  print(\n    ggplot(crime_data, aes(x = crimes)) +\n      geom_histogram(fill = \"lightblue\", color = \"black\", bins = 20) +\n      labs(title = gsub(\"_\", \" \", toupper(crime)),\n           x = \"Number of Cases\",\n           y = \"Frequency\") +\n      theme_minimal() +\n      theme(plot.title = element_text(hjust = 0.5))\n  )\n}\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-50-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-50-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-50-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-50-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-50-6.png){width=672}\n:::\n:::\n\n\n### 3.1.7 Histogram for Crime Rate per Capita by Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_summary <- crime_df_transformed %>%\n  group_by(state, type) %>%\n  summarise(\n    total_crimes = sum(crimes, na.rm = TRUE),\n    mean_crimes_pc = mean(crimes_pc, na.rm = TRUE),\n    total_population = sum(population, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(state_summary, aes(x = state, y = mean_crimes_pc, fill = type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Mean Crime Rates by State and Type\",\n       x = \"State\",\n       y = \"Mean Crimes per Capita\") +\n  scale_fill_viridis_d()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndistrict_summary <- crime_df_transformed %>%\n  group_by(state, district, type) %>%\n  summarise(\n    total_crimes = sum(crimes, na.rm = TRUE),\n    mean_crimes_pc = mean(crimes_pc, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state', 'district'. You can override using\nthe `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(district_summary, aes(x = state, y = mean_crimes_pc)) +\n  geom_boxplot(aes(fill = type)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"District-level Crime Rate Variation by State\",\n       x = \"State\",\n       y = \"Mean Crimes per Capita\") +\n  facet_wrap(~type, scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(crime_df_transformed, aes(x = crimes_pc, fill = type)) +\n  geom_histogram(bins = 30, alpha = 0.7) +\n  facet_wrap(~type, scales = \"free\") +\n  theme_minimal() +\n  labs(title = \"Distribution of Crime Rates by Type\",\n       x = \"Crimes per Capita\",\n       y = \"Frequency\") +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\n## 3.3 Summary\n\n### 3.3.1 Summary for Overall Crime Rate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- crime_df_transformed %>%\n  group_by(type) %>%\n  summarise(\n    total_crimes = sum(crimes, na.rm = TRUE),\n    mean_crimes_pc = mean(crimes_pc, na.rm = TRUE),\n    median_crimes_pc = median(crimes_pc, na.rm = TRUE),\n    sd_crimes_pc = sd(crimes_pc, na.rm = TRUE)\n  )\n\nsummary_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 6\n  type           total_crimes mean_crimes_pc median_crimes_pc sd_crimes_pc\n  <chr>                 <dbl>          <dbl>            <dbl>        <dbl>\n1 break_in             41679.        0.348           0.324         0.177  \n2 causing_injury       14829.        0.128           0.130         0.0630 \n3 murder                 878.        0.00729         0.00579       0.00830\n4 rape                  5398.        0.0588          0.0536        0.0341 \n5 robbery              25908.        0.0334          0.000422      0.0606 \n6 theft               128701.        0.233           0.142         0.267  \n# ℹ 1 more variable: geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n### 3.3.2 Summary for Overall Crime Rate by Category\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncategory_summary <- crime_df_transformed %>%\n  group_by(category) %>%\n  summarise(\n    Count = n(),\n    Mean_Cases = mean(crimes),\n    Median_Cases = median(crimes),\n    SD_Cases = sd(crimes),\n    Min_Cases = min(crimes),\n    Max_Cases = max(crimes),\n    Total_Cases = sum(crimes)\n  ) %>%\n  mutate(\n    Percentage_of_Total = (Total_Cases / sum(Total_Cases)) * 100\n  )\n\ncategory_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 2 × 10\n  category Count Mean_Cases Median_Cases SD_Cases Min_Cases Max_Cases\n* <chr>    <int>      <dbl>        <dbl>    <dbl>     <dbl>     <dbl>\n1 assault   2436       19.3            3     63.7         0      1165\n2 property  1740       97.9           32    228.          0      2695\n# ℹ 3 more variables: Total_Cases <dbl>, geometry <MULTIPOLYGON [m]>,\n#   Percentage_of_Total <dbl>\n```\n\n\n:::\n:::\n\n\n### 3.3.3 Detailed Summary by Category and Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndetailed_summary <- crime_df_transformed %>%\n  group_by(category, type) %>%\n  summarise(\n    Count = n(),\n    Mean_Cases = mean(crimes),\n    Median_Cases = median(crimes),\n    Total_Cases = sum(crimes)\n  ) %>%\n  arrange(category, desc(Total_Cases))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'category'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ndetailed_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 7\n# Groups:   category [2]\n  category type           Count Mean_Cases Median_Cases Total_Cases\n  <chr>    <chr>          <int>      <dbl>        <dbl>       <dbl>\n1 assault  robbery         1392      18.6         0.182      25908.\n2 assault  causing_injury   348      42.6        21          14829.\n3 assault  rape             348      15.5        10           5398.\n4 assault  murder           348       2.52        1            878.\n5 property theft           1392      92.5        24         128701.\n6 property break_in         348     120.         55.5        41679.\n# ℹ 1 more variable: geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n### 3.3.4 Percentage Distribution of Types within Categories\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntype_distribution <- crime_df_transformed %>%\n  group_by(category, type) %>%\n  summarise(count = n()) %>%\n  mutate(percentage = count / sum(count) * 100)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'category'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ntype_distribution\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 5\n# Groups:   category [2]\n  category type           count                              geometry percentage\n* <chr>    <chr>          <int>                    <MULTIPOLYGON [m]>      <dbl>\n1 assault  causing_injury   348 (((202015.1 682183.2, 202014.9 68215…       14.3\n2 assault  murder           348 (((202015.1 682183.2, 202014.9 68215…       14.3\n3 assault  rape             348 (((202015.1 682183.2, 202014.9 68215…       14.3\n4 assault  robbery         1392 (((195982.5 689783.8, 195974.6 68973…       57.1\n5 property break_in         348 (((202015.1 682183.2, 202014.9 68215…       20  \n6 property theft           1392 (((195982.5 689783.8, 195974.6 68973…       80  \n```\n\n\n:::\n:::\n\n\n### 3.3.5 Summary for Crime Rate per Capita by State\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# State-specific analysis\nfor(state_name in unique(crime_df_transformed$state)) {\n  cat(\"\\nSummary for\", state_name, \":\\n\")\n  state_stats <- crime_df_transformed %>%\n    filter(state == state_name) %>%\n    group_by(type) %>%\n    summarise(\n      total_crimes = sum(crimes, na.rm = TRUE),\n      mean_crimes_pc = mean(crimes_pc, na.rm = TRUE)\n    )\n  print(state_stats)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nSummary for JOHOR :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 498072.9 ymin: 139843.3 xmax: 728635.8 ymax: 324483.7\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in               4287        0.227   (((602626.3 144579.3, 602593.2 144…\n2 causing_injury         1744        0.0937  (((602626.3 144579.3, 602593.2 144…\n3 murder                  122        0.00686 (((602626.3 144579.3, 602593.2 144…\n4 rape                    661        0.0423  (((602626.3 144579.3, 602593.2 144…\n5 robbery                2678        0.0286  (((582577.9 162128.4, 582547.4 162…\n6 theft                 16555        0.194   (((582577.9 162128.4, 582547.4 162…\n\nSummary for KEDAH :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 563181 xmax: 349816.6 ymax: 723622.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in             4622.         0.405   (((196066.7 689897.8, 196036.3 689…\n2 causing_injury       1283.         0.126   (((196066.7 689897.8, 196036.3 689…\n3 murder                 64.4        0.00633 (((196066.7 689897.8, 196036.3 689…\n4 rape                  623.         0.0754  (((196066.7 689897.8, 196036.3 689…\n5 robbery              1562.         0.0309  (((192900.3 690374.9, 192965 69033…\n6 theft               11698.         0.281   (((192900.3 690374.9, 192965 69033…\n\nSummary for KELANTAN :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 371869.5 ymin: 503311.7 xmax: 519524.1 ymax: 690808.1\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in               2510        0.325   (((375654.5 511959.9, 375455.9 512…\n2 causing_injury          805        0.119   (((375654.5 511959.9, 375455.9 512…\n3 murder                   36        0.00599 (((375654.5 511959.9, 375455.9 512…\n4 rape                    386        0.0590  (((375654.5 511959.9, 375455.9 512…\n5 robbery                 621        0.0180  (((375179.7 512787.4, 374904.4 513…\n6 theft                  5941        0.174   (((375179.7 512787.4, 374904.4 513…\n\nSummary for KUALA LUMPUR :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 400919.1 ymin: 317083.2 xmax: 418125.7 ymax: 357979.3\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in               3335        0.329   (((407650.4 325882.4, 412071.5 325…\n2 causing_injury         1535        0.114   (((407650.4 325882.4, 412071.5 325…\n3 murder                   75        0.00575 (((407650.4 325882.4, 412071.5 325…\n4 rape                    367        0.0379  (((407650.4 325882.4, 412071.5 325…\n5 robbery                5392        0.0921  (((402680.2 343491.4, 400919.1 346…\n6 theft                 19859        0.416   (((402680.2 343491.4, 400919.1 346…\n\nSummary for MELAKA :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 441720.4 ymin: 226491 xmax: 510639.8 ymax: 275931.8\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in               1858        0.390   (((473075.8 241217, 473146.2 24117…\n2 causing_injury          608        0.148   (((473075.8 241217, 473146.2 24117…\n3 murder                   20        0.00417 (((473075.8 241217, 473146.2 24117…\n4 rape                    175        0.0425  (((473075.8 241217, 473146.2 24117…\n5 robbery                 598        0.0290  (((467397.9 242802, 467431.1 24284…\n6 theft                  3703        0.196   (((467397.9 242802, 467431.1 24284…\n\nSummary for NEGERI SEMBILAN :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 412843.5 ymin: 262983.6 xmax: 522875.9 ymax: 362734.7\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in               2187        0.392   (((421977.3 278386.1, 421977.4 278…\n2 causing_injury          845        0.160   (((421977.3 278386.1, 421977.4 278…\n3 murder                   38        0.00580 (((421977.3 278386.1, 421977.4 278…\n4 rape                    250        0.0587  (((421977.3 278386.1, 421977.4 278…\n5 robbery                 984        0.0347  (((422101.3 278477.8, 422101.3 278…\n6 theft                  5073        0.241   (((422101.3 278477.8, 422101.3 278…\n\nSummary for PAHANG :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 371151.4 ymin: 271831.8 xmax: 626719.7 ymax: 528224.3\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in               2223        0.299   (((520516.3 319280.5, 519860.9 319…\n2 causing_injury          777        0.130   (((520516.3 319280.5, 519860.9 319…\n3 murder                   46        0.00943 (((520516.3 319280.5, 519860.9 319…\n4 rape                    443        0.0717  (((520516.3 319280.5, 519860.9 319…\n5 robbery                 542        0.0161  (((421148.3 404597.3, 420992.8 404…\n6 theft                  5511        0.203   (((421148.3 404597.3, 420992.8 404…\n\nSummary for PERAK :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 233734.5 ymin: 405715.7 xmax: 418115.7 ymax: 656488.5\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in               3068         0.265  (((234410.5 440553.4, 234373.9 440…\n2 causing_injury         1399         0.125  (((234410.5 440553.4, 234373.9 440…\n3 murder                  107         0.0106 (((234410.5 440553.4, 234373.9 440…\n4 rape                    372         0.0420 (((234410.5 440553.4, 234373.9 440…\n5 robbery                1531         0.0300 (((234320.4 440512.2, 234250.7 440…\n6 theft                  8008         0.185  (((234320.4 440512.2, 234250.7 440…\n\nSummary for PERLIS :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 238340.7 ymin: 692474.3 xmax: 265740.5 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in                469        0.409   (((238340.7 709172, 238477.3 70930…\n2 causing_injury          171        0.149   (((238340.7 709172, 238477.3 70930…\n3 murder                    5        0.00437 (((238340.7 709172, 238477.3 70930…\n4 rape                    102        0.0888  (((238340.7 709172, 238477.3 70930…\n5 robbery                  86        0.0188  (((238340.7 709172, 238477.3 70930…\n6 theft                  1025        0.224   (((238340.7 709172, 238477.3 70930…\n\nSummary for PULAU PINANG :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 243354.3 ymin: 568005 xmax: 284837.1 ymax: 618458.1\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in               3184        0.457   (((243755.8 578931, 243600.2 57877…\n2 causing_injury         1438        0.196   (((243755.8 578931, 243600.2 57877…\n3 murder                   54        0.00760 (((243755.8 578931, 243600.2 57877…\n4 rape                    380        0.0573  (((243755.8 578931, 243600.2 57877…\n5 robbery                1904        0.0625  (((243600.9 578747.6, 243446.2 578…\n6 theft                  9404        0.319   (((243600.9 578747.6, 243446.2 578…\n\nSummary for SELANGOR :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 312944.8 ymin: 287080.1 xmax: 441700.7 ymax: 427982.4\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in              11920         0.414  (((359962 321443.7, 359902.8 32151…\n2 causing_injury         3785         0.140  (((359962 321443.7, 359902.8 32151…\n3 murder                  299         0.0102 (((359962 321443.7, 359902.8 32151…\n4 rape                   1361         0.0633 (((359962 321443.7, 359902.8 32151…\n5 robbery                9721         0.0709 (((359810.7 321653.8, 359756.8 321…\n6 theft                 37918         0.305  (((359810.7 321653.8, 359756.8 321…\n\nSummary for TERENGGANU :\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 488153.4 ymin: 430188.5 xmax: 633026.5 ymax: 646332.6\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 6 × 4\n  type           total_crimes mean_crimes_pc                            geometry\n  <chr>                 <dbl>          <dbl>                  <MULTIPOLYGON [m]>\n1 break_in               2016        0.419   (((519435.5 528577.9, 519069.9 529…\n2 causing_injury          439        0.0952  (((519435.5 528577.9, 519069.9 529…\n3 murder                   12        0.00309 (((519435.5 528577.9, 519069.9 529…\n4 rape                    278        0.0608  (((519435.5 528577.9, 519069.9 529…\n5 robbery                 289        0.0152  (((518948.6 529806, 518838.2 53012…\n6 theft                  4006        0.213   (((518948.6 529806, 518838.2 53012…\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Take-Home_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}