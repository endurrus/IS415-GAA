{
  "hash": "6a0558528b4ba725a9cc71676ce70516",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home_Ex03\"\ndate: \"October 19, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: false\n  echo: true\n  freeze: true\nformat:\n  html:\n    toc: true\n---\n\n\n# **Introduction : Drug Abuse in Thailand**\n\n## **Importing Packages**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, st, tidyverse, raster, tmap, tmaptools, ggplot2, spatstat, sfdep)\n```\n:::\n\n\n## **Importing Dataset into R environment**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_district <- read_csv(\"data/crime_district.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmalaysia_sf <- read_sf(dsn = \"data/geospatial/mys_adm_unhcr_20210211_shp\", \n                 layer = \"mys_admbnda_adm1_unhcr_20210211\") %>%\n  st_as_sf(coords =c(\n    \"longitude\", \"latitude\"),\n           crs = 4326) %>%\n  st_transform(crs = 3167)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmalaysia_sf <- malaysia_sf %>%\n  filter(ADM1_EN != 'Sabah') %>%\n  filter(ADM1_EN != 'Sarawak') %>%\n  filter(ADM1_EN != 'W.P. Labuan') %>%\n  mutate(state = replace(ADM1_EN, ADM1_EN == 'W.P. Kuala Lumpur', 'Kuala Lumpur'))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmalaysia_sf\n```\n:::\n\n\n# **Geospatial Data Wrangling**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_district <- crime_district %>%\n                  filter(state !='Malaysia') %>% \n                  filter(type !='all') %>% \n                  filter(district =='All') %>%\n                  filter(state != 'Sabah') %>%\n                  filter(state != 'Sarawak') %>%\n                  filter(state != 'Labuan')\ncrime_district\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_district <- crime_district %>% \n                  mutate(state = replace(state, state == 'W.P. Kuala Lumpur', 'Kuala Lumpur'))\n\ncrime_district\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_district_malaysia <- malaysia_sf %>%\n  left_join(crime_district,\n            by = c(\"ADM1_EN\" = \"state\")) %>%\n  dplyr::select(1, 8:10, 13:16)\n\ncrime_district_malaysia\n```\n:::\n\n\n# EDA\n\n## Choropleth Map for Crime Rate by State\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Choropleth map of crime rate by state\ntm_shape(crime_district_malaysia) +\n  tm_polygons(\"rate\", \n              style = \"quantile\", \n              palette = \"YlOrRd\", \n              title = \"Crime Rate\") +\n  tm_layout(title = \"Crime Rate by State in Malaysia\", \n            title.size = 1.2, \n            frame = FALSE)\n```\n:::\n\n\n## Histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histogram for total crime rate\nggplot(crime_district, aes(x = rate)) +\n  geom_histogram(binwidth = 5, fill = \"blue\", color = \"black\") +\n  labs(title = \"Distribution of Crime Rates\",\n       x = \"Crime Rate\", y = \"Frequency\") +\n  theme_minimal()\n\n# Histogram for specific crime types (replace 'violent' with actual crime types in your dataset)\nggplot(crime_district %>% filter(type == 'violent'), aes(x = rate)) +\n  geom_histogram(binwidth = 5, fill = \"red\", color = \"black\") +\n  labs(title = \"Distribution of Violent Crime Rates\",\n       x = \"Crime Rate\", y = \"Frequency\") +\n  theme_minimal()\n```\n:::\n\n\n## Summary\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summary statistics for crime rates\ncrime_summary <- crime_district %>%\n  summarise(mean_rate = mean(rate, na.rm = TRUE),\n            median_rate = median(rate, na.rm = TRUE),\n            sd_rate = sd(rate, na.rm = TRUE))\n\ncrime_summary\n```\n:::\n\n\n# **Visualization of Drug Use Trends (2017–2022)**\n\nOne of the essential tasks in geospatial analysis is to visualize the data in an intuitive and informative way. This section focuses on geovisualization, where we map the number of drug use cases across Thailand for each year from 2017 to 2022. By using equal quantile classification, we can better understand the distribution of drug offenses across provinces and identify areas with higher and lower incidences. These visualizations allow us to observe spatial patterns over time and identify regions that are particularly affected.\n\nPreliminary observations suggest that drug use is especially prevalent in the northeastern and southern regions of Thailand. Despite the proximity of the Golden Triangle in the northwest, fewer drug use cases appear in this region. This anomaly may be due to the fact that drugs are trafficked through northeastern provinces toward coastal regions, where they are then exported.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplots <- list()\n\nfor (i in 2017:2022){\n  p <- drugoff_sf %>%\n    filter(fiscal_year == i) %>%\n    tm_shape() +\n    tm_polygons(\"no_cases\")\n  \n  plots[[paste0(\"plot\", i)]] <- p\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugoff_list <- split(drugoff_sf, drugoff_sf$fiscal_year)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(drugoff_sf) +\n  tm_fill(\"no_cases\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n```\n:::\n\n\nIt is evident that the northeastern and southern regions of Thailand exhibit the highest concentration of drug use cases. Interestingly, despite the proximity of the Golden Triangle—a well-known drug production area located in the northwest—this region shows relatively fewer drug use incidents. This disparity may be attributed to the fact that drug trafficking routes likely pass through the northeastern provinces en route to coastal ports for further distribution or export.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n\nplot_list <- list()\n\nfor (year in names(drugoff_list)) {\n  p <- tm_shape(drugoff_list[[year]]) +\n      tm_fill(\"no_cases\",\n              n = 5,\n              style = \"quantile\",\n              title = \"Number of Cases\") + \n      tm_borders(alpha = 0.5) +\n      tm_layout(main.title = paste(\"Equal Quantile Classification\", year),\n                main.title.size = 0.8,\n                main.title.position = c(\"center\", \"top\"), \n                frame = FALSE,\n                legend.outside = TRUE,\n                legend.outside.position = \"right\")\n  \n  plot_list[[year]] <- p\n}\n\ntmap_arrange(plotlist = plot_list, ncol = 2, nrow = 3)\n```\n:::\n\n\nThe data indicates that drug use was notably high from 2017 to 2019, but a decline is observed starting in 2020. This reduction in cases may potentially be linked to the impact of the COVID-19 pandemic, which could have disrupted drug trafficking routes, law enforcement activities, or access to drugs during this period.\n\n# **Drug Use Cases for 2018**\n\n## Filtering and Preparing the 2018 Data\n\nWe first retrieve data for drug use cases from the year 2018. The data is stored as a list, and this specific index extracts the 2018 subset for further analysis. The goal is to conduct spatial analysis for this year's drug use cases.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugoff_list[[2]]\n```\n:::\n\n\n## Generating Contiguity Neighbors\n\nHere, we compute the contiguity neighbors for the 2018 dataset. The function `st_contiguity` calculates which geographical units (provinces) share boundaries, storing this spatial relationship in the `nb` column. This neighbor information is essential for the subsequent spatial autocorrelation analysis.\n\nA specific geometry without neighbors is manually assigned the nearest neighboring geometry to ensure proper spatial analysis.\n\nSpatial weights are computed for each province based on the contiguity information. The `st_weights` function calculates weights following the \"W\" style (row-standardized), which is crucial for the spatial autocorrelation measures to follow.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_du18 <- drugoff_list[[2]] %>%\n  mutate(nb = st_contiguity(geometry))\n\nempty_index <- 68   \nnearest_index <- 67 \n\nwm_q_du18$nb[[empty_index]] <- as.integer(nearest_index)\n\nwm_q_DUC18 <- wm_q_du18 %>%\n  mutate(wt = st_weights(nb, style = \"W\"),\n         .before = 1)\n```\n:::\n\n\n## Moran's I: Global Spatial Autocorrelation\n\nMoran's I, a global measure of spatial autocorrelation, which indicates whether drug use cases in one province are spatially clustered or dispersed, is calculated. The `global_moran` function applies this test, and the `glimpse` function gives an overview of the resulting statistics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI_DUC18 <- global_moran(wm_q_DUC18$no_cases, wm_q_DUC18$nb, wm_q_DUC18$wt)\n\nglimpse(moranI_DUC18)\n```\n:::\n\n\n## Moran's I Permutation Test\n\nA permutation test for Moran's I is run to assess the statistical significance of the observed spatial autocorrelation. By setting a seed value and running 99 simulations, we can compare the observed Moran's I with a distribution of random outcomes, enhancing the robustness of the results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q_DUC18$no_cases, wm_q_DUC18$nb, wm_q_DUC18$wt)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(777)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q_DUC18$no_cases, wm_q_DUC18$nb, wm_q_DUC18$wt, nsim = 99)\n```\n:::\n\n\n## Local Moran's I Analysis (LISA)\n\nLocal Moran's I (LISA) is calculated to identify specific regions (provinces) where drug use cases are significantly clustered. Each province receives a local statistic measuring its spatial relationship with neighboring provinces. This local autocorrelation analysis helps pinpoint \"hotspots\" of high drug use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_DUC18 <- wm_q_DUC18 %>% \n  mutate(local_moran = local_moran(no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n## Visualization of Local Moran's I\n\nThe results of the Local Moran’s I analysis are visualized. The first map shows the clustering intensity of drug use cases, while the second map displays the corresponding p-values. Areas with significant local autocorrelation are highlighted, offering insights into specific regions with notable drug activity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_DUC18) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I of no_cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_DUC18) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n:::\n\n\n## Filtering Significant Results\n\nOnly provinces with statistically significant local Moran's I values (p-value \\< 0.05) are filtered for further analysis. These regions are displayed on a map, highlighting the key areas where drug use cases are either clustered or dispersed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig_DUC18 <- lisa_DUC18 %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(lisa_DUC18) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_DUC18) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n:::\n\n\n## Inverse Distance Weights\n\nInverse distance weights are calculated here to account for spatial relationships beyond just contiguity. This method emphasizes nearby locations more than distant ones and is used to enhance the local Gi\\* analysis in the next step.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw_DUC18 <- wm_q_du18 %>%\n  mutate(wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n```\n:::\n\n\n## Local Gi\\* Analysis\n\nThe local Gi\\* statistic is computed to detect \"hot\" or \"cold\" spots of drug use cases. This method identifies clusters where provinces either have significantly higher or lower drug use compared to their neighbors. These clusters can indicate concentrated areas of drug problems or effective control.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_DUC18 <- wm_idw_DUC18 %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\nHCSA_DUC18\n```\n:::\n\n\n## Visualizing Local Gi\\* Results\n\nThe Local Gi\\* analysis results are visualized in two maps: one showing Gi\\* values and the other displaying p-values. These maps help identify significant spatial clusters, highlighting areas with abnormal drug use case patterns for deeper investigation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(HCSA_DUC18) +\n  tm_fill(\"gi_star\", palette = \"-RdBu\", style = \"cont\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(HCSA_DUC18) + tm_fill(\"p_sim\") + tm_borders(alpha = 0.5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(HCSA_DUC18) +\n  tm_fill(\"gi_star\", palette = \"-RdBu\", style = \"cont\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_DUC18) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n:::\n\n\n## Significant Gi\\* Results\n\nThe final step filters provinces where the Gi\\* statistic is significant (p-value \\< 0.05). These significant regions are displayed on a map, offering an overview of \"hot\" and \"cold\" spots in drug use across Thailand in 2018.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig_DUC18 <- HCSA_DUC18  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(HCSA_DUC18) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_DUC18) +\n  tm_fill(\"gi_star\", palette = \"-RdBu\", style = \"cont\") + \n  tm_borders(alpha = 0.4)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}